[{"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\index.js":"1","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\Navbar.jsx":"2","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\AllCoursesPage.jsx":"3","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\data\\Global.js":"4","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SpecificHomeWorkCell.jsx":"5","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseCell.jsx":"6","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\API\\API.js":"7","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\CoursePage.jsx":"8","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\LogInPage.jsx":"9","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\App.js":"10","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\FilesList.jsx":"11","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\UploadDisplayer.jsx":"12","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\UploadFile.jsx":"13","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\HomeworksTeacherViewPage.jsx":"14","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SubmissionCell.jsx":"15","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SingleHomeworkTeacherViewCell.jsx":"16","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\HomeworkStudentViewPage.jsx":"17","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\Util\\TimeUtil.js":"18","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseStudentHomeWorkCell.jsx":"19","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\Comment.jsx":"20","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\SubmissionTeacherView.jsx":"21","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseTeacherHomeWorkCell.jsx":"22","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\data\\store.js":"23","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseForm.jsx":"24","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\ColorfulSelect.jsx":"25","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\TemporaryAlert.jsx":"26","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\EditableParagraph.jsx":"27","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\HomeworkForm.jsx":"28","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\DateTimePicker.jsx":"29"},{"size":776,"mtime":1611427153982,"results":"30","hashOfConfig":"31"},{"size":1357,"mtime":1611650743620,"results":"32","hashOfConfig":"31"},{"size":2629,"mtime":1611650901895,"results":"33","hashOfConfig":"31"},{"size":6261,"mtime":1611650196927,"results":"34","hashOfConfig":"31"},{"size":2881,"mtime":1611392392810,"results":"35","hashOfConfig":"31"},{"size":1374,"mtime":1611488000196,"results":"36","hashOfConfig":"31"},{"size":6235,"mtime":1611678229916,"results":"37","hashOfConfig":"31"},{"size":7051,"mtime":1611679469423,"results":"38","hashOfConfig":"31"},{"size":2438,"mtime":1611650189871,"results":"39","hashOfConfig":"31"},{"size":3619,"mtime":1611675964810,"results":"40","hashOfConfig":"31"},{"size":3557,"mtime":1611516334137,"results":"41","hashOfConfig":"31"},{"size":694,"mtime":1611412910663,"results":"42","hashOfConfig":"31"},{"size":4134,"mtime":1611488768922,"results":"43","hashOfConfig":"31"},{"size":2800,"mtime":1611488535742,"results":"44","hashOfConfig":"31"},{"size":1014,"mtime":1611427430249,"results":"45","hashOfConfig":"31"},{"size":3656,"mtime":1611482801417,"results":"46","hashOfConfig":"31"},{"size":3096,"mtime":1611482946983,"results":"47","hashOfConfig":"31"},{"size":1267,"mtime":1611232456223,"results":"48","hashOfConfig":"31"},{"size":1052,"mtime":1611392239174,"results":"49","hashOfConfig":"31"},{"size":406,"mtime":1611232456224,"results":"50","hashOfConfig":"31"},{"size":4150,"mtime":1611486844321,"results":"51","hashOfConfig":"31"},{"size":964,"mtime":1611392235417,"results":"52","hashOfConfig":"31"},{"size":728,"mtime":1611317667885,"results":"53","hashOfConfig":"31"},{"size":4321,"mtime":1611651538164,"results":"54","hashOfConfig":"31"},{"size":2196,"mtime":1611504525902,"results":"55","hashOfConfig":"31"},{"size":842,"mtime":1611648917706,"results":"56","hashOfConfig":"31"},{"size":1260,"mtime":1611656539378,"results":"57","hashOfConfig":"31"},{"size":3129,"mtime":1611679004736,"results":"58","hashOfConfig":"31"},{"size":1090,"mtime":1611677832863,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1xwpcuj",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\index.js",["138","139","140"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {store} from \"./data/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport persistStore from \"redux-persist/es/persistStore\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport UploadFile from \"./components/UploadFile\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport FilesList from \"./components/FilesList\";\r\nimport './styles.scss';\r\nimport UploadDisplayer from \"./components/UploadDisplayer\";\r\n\r\n\r\nlet persistor = persistStore(store)\r\nReactDOM.render(\r\n  <>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App/>\r\n      </PersistGate>\r\n    </Provider>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);",["141","142"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\Navbar.jsx",["143","144"],"import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Icon, InlineIcon} from '@iconify/react';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport {useDispatch} from 'react-redux';\r\nimport {currentUser, setCurrentUser} from '../data/Global';\r\n\r\nfunction Navbar2(props) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(currentUser);\r\n\r\n  const onLogOut = () => {\r\n    dispatch(setCurrentUser(null));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        collapseOnSelect\r\n        sticky=\"top\"\r\n        expand=\"lg\"\r\n        className=\"navbarc myNavBar shadow\"\r\n      >\r\n        <Navbar.Brand id=\"gradingSystem\">Grading System <span className=\"navbar-username\">{user && `${user.fname} ${user.lname}`}</span></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <Nav.Link eventKey={2} href=\"/\" onClick={onLogOut}>\r\n              <div>Log Out</div>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {currentCourse: state.currentCourse};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar2);\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\AllCoursesPage.jsx",["145","146","147"],"import React, {useEffect, useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport CourseCell from '../components/CourseCell';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {\r\n  setCurrentCourse,\r\n  setCourseActive,\r\n  setHomeWorkActive,\r\n  currentUser,\r\n  setCurrentCourseTitle,\r\n  setHideSubmissionDetails,\r\n  setIsAddCourseHidden,\r\n} from '../data/Global';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {getUserCourses} from '../API/API';\r\nimport {Button} from 'react-bootstrap';\r\nconst axios = require('axios');\r\n\r\nexport default function MainPage() {\r\n  const history = useHistory();\r\n  const [coursesData, setCoursesData] = useState([]);\r\n  const user = useSelector(currentUser);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getUserCourses(user.id).then((res1) => {\r\n        const rawData = res1.data;\r\n\r\n        let d = new Map();\r\n        rawData.forEach((r) => {\r\n          if (!d.has(r.cid)) {\r\n            d.set(r.cid, []);\r\n          }\r\n          d.get(r.cid).push(r);\r\n        });\r\n\r\n        const crses = [];\r\n        d.forEach((v, k) => {\r\n          crses.push(v);\r\n        });\r\n\r\n        setCoursesData(crses);\r\n        setIsLoading(false);\r\n      });\r\n\r\n      dispatch(setCourseActive(true));\r\n      dispatch(setHomeWorkActive(true));\r\n      dispatch(setHideSubmissionDetails(true));\r\n      dispatch(setIsAddCourseHidden(true));\r\n      console.log('user:', user);\r\n    }\r\n  }, [user]);\r\n\r\n  const onCourseClick = (course) => {\r\n    dispatch(setCurrentCourse(course));\r\n    dispatch(setCurrentCourseTitle(course[0].title));\r\n\r\n    history.push('/Course');\r\n  };\r\n\r\n  const onAddCourseClicked = () => {\r\n    dispatch(setIsAddCourseHidden(false));\r\n    history.push('/CourseForm');\r\n  };\r\n  return (\r\n    <>\r\n      {user && user.type == 'teacher' && (\r\n        <div className=\"pb-5\">\r\n          <Button className=\"float-right mb-2\" onClick={onAddCourseClicked}>\r\n            Add Course\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      <Container>\r\n        {!isLoading ? (\r\n          coursesData &&\r\n          coursesData.length > 0 &&\r\n          coursesData.map((course, i) => {\r\n            return (\r\n              <Row key={i}>\r\n                <CourseCell\r\n                  course={course}\r\n                  onClick={() => onCourseClick(course)}\r\n                />\r\n              </Row>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Loading courses...</p>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n",["148","149"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\data\\Global.js",[],["150","151"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SpecificHomeWorkCell.jsx",["152","153","154","155","156","157","158"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseCell.jsx",["159"],"import React, {useState} from 'react';\r\nimport {Container, Row} from 'react-bootstrap';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function CourseCell({course, onClick}) {\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHovering(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHovering(false);\r\n  };\r\n\r\n  const onContainerClick = () => {\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n\r\n    <Container \r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onContainerClick}\r\n      className={`course-cell Container ${\r\n        isHovering ? ' shadow-lg' : 'shadow '\r\n      } p-4 mb-5 bg-white rounded `}\r\n    >\r\n      {course && (\r\n        <>\r\n          <Row className=\"course-title\">{course[0].title}</Row>\r\n          <TeachersNames teachers={course} />\r\n        </>\r\n      )}\r\n    </Container>\r\n\r\n  );\r\n}\r\n\r\nconst TeachersNames = ({teachers}) => {\r\n  return (\r\n    <>\r\n      <p>Teachers:</p>\r\n      <div className=\"course-teachers-names\">\r\n        {teachers.map((tch, i) => (\r\n          <TeacherName key={i} teacher={tch} />\r\n          \r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TeacherName = ({teacher}) => {\r\n  return (\r\n    <div className=\"teacher-name-clickable\">{`${teacher.fname} ${teacher.lname}`}</div>\r\n  );\r\n};\r\n",["160","161"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\API\\API.js",[],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\CoursePage.jsx",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\LogInPage.jsx",["178","179"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {useDispatch} from 'react-redux';\r\nimport {\r\n  setCurrentUser,\r\n  setCourseActive,\r\n  setHomeWorkActive,\r\n  setHomeWorksActive,\r\n  setIsAddCourseHidden,\r\n} from '../data/Global';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {setCoursesActive} from '../data/Global';\r\nimport {logIn} from '../API/API';\r\nimport TemporaryAlert from '../components/TemporaryAlert';\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setCoursesActive(true));\r\n    dispatch(setCourseActive(true));\r\n    dispatch(setHomeWorkActive(true));\r\n    dispatch(setHomeWorksActive(true));\r\n    dispatch(setIsAddCourseHidden(true));\r\n  }, []);\r\n\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const alertRef = useRef();\r\n  function validateForm() {\r\n    return id.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    logIn(id, password).then((res) => {\r\n      if (res.data.length != 0) {\r\n\r\n        history.push('/Courses');\r\n        dispatch(setCurrentUser(res.data[0]));\r\n        dispatch(setCoursesActive(false));\r\n      } else {\r\n        alertRef.current.showAlert();\r\n      }\r\n    });\r\n  }\r\n\r\n  const alertHeading = 'Log in failed';\r\n  const alertBody = 'Password or ID are not correct! try again.';\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <TemporaryAlert\r\n        body={alertBody}\r\n        heading={alertHeading}\r\n        type=\"warning\"\r\n        ref={alertRef}\r\n      />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group size=\"lg\" controlId=\"email\">\r\n          <Form.Label>ID</Form.Label>\r\n          <Form.Control\r\n            autoFocus\r\n            type=\"number\"\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group size=\"lg\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\App.js",["180","181"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\FilesList.jsx",["182","183","184","185"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\UploadDisplayer.jsx",[],["186","187"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\UploadFile.jsx",[],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\HomeworksTeacherViewPage.jsx",["188","189","190"],"import React, {useEffect, useState} from 'react';\r\nimport {\r\n  setHomeWorksActive,\r\n  currentHomeworkTeacher,\r\n  setHomeWorkActive,\r\n  currentUser,\r\n  setCurrentSubmission,\r\n  setHideSubmissionDetails,\r\n  setCurrentSubmissionStudentId,\r\n} from '../data/Global';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport {getStudentsHomeWorks, getStudentDetails} from '../API/API';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UploadDisplayer from '../components/UploadDisplayer';\r\nimport {toDateTimeString} from '../Util/TimeUtil';\r\nimport SubmissionCell from '../components/SubmissionCell';\r\nexport default function HomeworkTeacherView() {\r\n  const Homework = useSelector(currentHomeworkTeacher);\r\n  const history = useHistory();\r\n  const user = useSelector(currentUser);\r\n\r\n  const dispatch = useDispatch();\r\n  const [StudentsHomeWorks, setStudentHomeWorks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getStudentsHomeWorks(Homework.id).then((res) => {\r\n      let x = res.data;\r\n      setStudentHomeWorks(x);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(setHideSubmissionDetails(true));\r\n    dispatch(setHomeWorkActive(false));\r\n    dispatch(setHomeWorksActive(true));\r\n  }, []);\r\n\r\n  const onSubmissionClick = (stuSub) => {\r\n    getStudentDetails(stuSub.studentid).then((res) => {\r\n      // dispatch(setCurrStuTeachViewActive(res.data));\r\n      const data = {\r\n        homeworkTitle: Homework.title,\r\n        student: res.data[0],\r\n        submission: stuSub,\r\n      };\r\n      dispatch(setCurrentSubmission(data));\r\n      dispatch(setHideSubmissionDetails(false));\r\n      dispatch(setCurrentSubmissionStudentId(stuSub.studentid))\r\n      history.push('/SubmissionTeacherView');\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\" p-3 mb-3\">{Homework.title}</h1>\r\n      <h4 className=\" p-3 mb-3\">\r\n        DeadLine: {toDateTimeString(Homework.deadline)}\r\n      </h4>\r\n      <h4 className=\" p-3 mb-3\">{Homework.description}</h4>\r\n      <UploadDisplayer\r\n        fkValue={Homework.id}\r\n        fk=\"homework_id\"\r\n        table=\"homework_file\"\r\n        allowUpload={user.type == 'teacher'}\r\n      />\r\n      <h3 className=\"p-3 mb-3\">Students' Submissions</h3>\r\n\r\n      <Container>\r\n        {/* Stack the columns on mobile by making one full-width and the other half-width */}\r\n        <Container className=\"submissions-box-teacher-view\">\r\n          {StudentsHomeWorks.map((submission, i) => {\r\n            return (\r\n              <SubmissionCell\r\n                key={i}\r\n                className=\"item\"\r\n                submission={submission}\r\n                onClick={() => onSubmissionClick(submission)}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SubmissionCell.jsx",[],["191","192"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\SingleHomeworkTeacherViewCell.jsx",["193","194","195","196","197","198","199"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\HomeworkStudentViewPage.jsx",["200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  setHomeWorksActive,\r\n  currentHomeworkStudent,\r\n  setHomeWorkActive,\r\n} from \"../data/Global\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SpecificHomeWorkCell from \"../components/SpecificHomeWorkCell\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n\r\nexport default function HomeworkStudentView() {\r\n  const student_hw = useSelector(currentHomeworkStudent);\r\n  const [hwDetails, setSubmittedHomeWork] = useState(\"\");\r\n  // var SubmittedHomeWork;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // on init\r\n    // let StudentComments;\r\n    // let AllComments=[];\r\n    // let textStudComments = \"\";\r\n    // let textTeachComments = \"\";\r\n    // let TeacherComments;\r\n    // var i;\r\n    // var j=0;\r\n    // getStudentComments(student_hw.studentId, student_hw.id).then((res) => {\r\n    //   StudentComments = res.data;\r\n    //   getTeachSubComments(student_hw.id).then((res) => {\r\n    //     TeacherComments = res.data;\r\n    //     console.log(\"cccd\",TeacherComments);\r\n    //     for (i = 0; i < TeacherComments.length+StudentComments.length; i+=2){\r\n    //       if(TeacherComments.length>j)\r\n    //       AllComments[i]=TeacherComments[j];\r\n    //       if(StudentComments.length>j)\r\n    //       AllComments[i+1]=StudentComments[j];\r\n    //       j++;\r\n    //     }         \r\n    //     AllComments.sort((a,b)=> -intifiy(a.createdAt) + intifiy(b.createdAt))             \r\n    //     let finalResult = {\r\n    //       id: student_hw.id,\r\n    //       studentId: student_hw.studentId,\r\n    //       description: student_hw.description,\r\n    //       Name: student_hw.Name,\r\n    //       deadline: student_hw.deadline,\r\n    //       updatedAt: student_hw.updatedAt,\r\n    //       status: student_hw.status,\r\n    //       grade: student_hw.grade,\r\n    //       title: student_hw.title,\r\n    //       AllCommentsSorted: AllComments,\r\n    //     };\r\n\r\n    //     dispatch(setCurrentHomeworkStudentWithComments(finalResult));\r\n    //     setSubmittedHomeWork(finalResult);\r\n    //   });\r\n    // });\r\n\r\n  \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(setHomeWorkActive(false));\r\n    dispatch(setHomeWorksActive(true));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1 className=\" p-3 mb-3\">{hwDetails.title}</h1>\r\n      <h4 className=\" p-3 mb-3\">{hwDetails.description}</h4>\r\n      <Container>\r\n        {/* Stack the columns on mobile by making one full-width and the other half-width */}\r\n        <Row>\r\n          {hwDetails && (\r\n            <SpecificHomeWorkCell\r\n              id={hwDetails.studentId}\r\n              SubmissionId={hwDetails.id}\r\n              name={hwDetails.Name}\r\n              submitteddate={hwDetails.updatedAt}\r\n              homeworkfile={hwDetails.homeworkfile}\r\n              Status={hwDetails.status}\r\n              Grade={hwDetails.grade}\r\n              deadline={hwDetails.deadline}\r\n              allcommentssorted={hwDetails.AllCommentsSorted}\r\n            />\r\n          )}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n",["203","204"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\Util\\TimeUtil.js",[],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseStudentHomeWorkCell.jsx",["205","206","207","208","209"],"import React, { useState } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function CourseStudentHomeWorkCell({ id,Title, DeadLine, Status,onClick }) {\r\n\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const onMouseEnter = () => {\r\n    setIsHovering(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHovering(false);\r\n  };\r\n  const onContainerClick = () => {\r\n    \r\n    \r\n    onClick()\r\n  };\r\n  return (\r\n\r\n    <Container\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onContainerClick}\r\n      className={`Container ${\r\n        isHovering ? \" shadow-lg\" : \"shadow \"\r\n      }${\r\n        Status==\"Submitted\" ? \"CourseSubmittedHomeWork\" : \"CourseNotSubmittedHomeWork\"\r\n      } p-4 mb-5 rounded `}\r\n      \r\n    >\r\n      <Row>{Title}</Row>\r\n      <Row>DeadLine: {DeadLine}</Row>\r\n      <Row>Status: {Status}</Row>\r\n    </Container>\r\n  );\r\n    \r\n}\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\Comment.jsx",["210"],"import React from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport { timeFromDateISO, toDateString } from \"../Util/TimeUtil\";\r\nconst Comment = ({comment}) => {\r\n  return (\r\n    <>\r\n      <Row >\r\n        <Col>{comment.content}</Col>\r\n        <Col>{comment.authorFullName}</Col>\r\n        <Col>{timeFromDateISO(comment.createdAt)}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\pages\\SubmissionTeacherView.jsx",["211","212","213","214"],"import React, {useEffect, useState} from 'react';\r\nimport {currentSubmission} from '../data/Global';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {intifiy, toDateTimeString} from '../Util/TimeUtil';\r\nimport Table from 'react-bootstrap/Table';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {getComments, sendComment} from '../API/API';\r\nimport {\r\n  currentUser,\r\n} from '../data/Global';\r\nexport default function SubmissionTeacherView() {\r\n  const submission = useSelector(currentSubmission);\r\n\r\n  useEffect(() => {\r\n    console.log('submission', submission);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\" p-3 mb-3\">{submission.homeworkTitle}</h1>\r\n      <SubmissionDetails sub={submission.submission} stu={submission.student} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst SubmissionDetails = ({sub, stu}) => {\r\n  return (\r\n    <div className=\"submission-details-table\">\r\n      <Table responsive>\r\n        <tbody>\r\n          <tr>\r\n            <td>ID:</td>\r\n            <td>{stu.id}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Name:</td>\r\n            <td>{`${stu.fname} ${stu.lname}`}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Submitted At:</td>\r\n            <td>{toDateTimeString(sub.createdat)}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Grade:</td>\r\n            <td>{sub.grade >= 0 ? sub.grade : '-'}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Status:</td>\r\n            <td>{sub.grade >= 0 ? 'Graded' : 'Waiting for grading'}</td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>Comments:</td>\r\n            <td>\r\n              <Comments submissionId={sub.id} stuId={stu.id} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst Comments = ({submissionId, stuId}) => {\r\n  const [str, setStr] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const user = useSelector(currentUser);\r\n\r\n  const loadComments = (sub_id) => {\r\n    getComments(sub_id).then((res) => {\r\n      console.log('comments:', res.data);\r\n      setComments(res.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    loadComments(submissionId);\r\n  }, [submissionId]);\r\n\r\n  const addComment = (content) => {\r\n    if (content != '') {\r\n      sendComment(\r\n        user.id,\r\n        `${user.fname} ${user.lname}`,\r\n        user.type,\r\n        submissionId,\r\n        content\r\n      ).then((res) => {\r\n        loadComments(submissionId);\r\n      });\r\n    }\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addComment(str);\r\n    setStr('');\r\n    return false;\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setStr(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      {comments\r\n        .sort((a, b) => intifiy(b.createdat) - intifiy(a.createdat))\r\n        .map((c, i) => {\r\n          return <Comment key={i} c={c} stuId={stuId} />;\r\n        })}\r\n      <Form onSubmit={onSubmit}>\r\n        <Form.Group controlId=\"formAddComment\">\r\n          <Form.Label>Add a comment</Form.Label>\r\n          <Form.Control autoComplete=\"off\" type=\"text\" placeholder=\"Comment\" onChange={onChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\r\n          Send\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Comment = ({c, stuId}) => {\r\n  const isMe = stuId == c.authorid;\r\n\r\n  const cn1 = `single-comment ${isMe && 'single-comment-me'}`;\r\n  const cn2 = `single-comment-inner-container ${\r\n    isMe && 'single-comment-inner-container-me'\r\n  }`;\r\n  const cn3 = `single-comment-box ${isMe && 'single-comment-box-me'}`;\r\n  const cn4 = `single-comment-content ${isMe && 'single-comment-content-me'}`;\r\n\r\n  return (\r\n    <div className={cn1}>\r\n      <div className={cn2}>\r\n        <div className={cn3}>\r\n          <div className=\"single-comment-author\">{c.authorfullname}</div>\r\n          <div className={cn4}>{c.content}</div>\r\n          <div className=\"single-comment-time\">\r\n            {toDateTimeString(c.createdat)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseTeacherHomeWorkCell.jsx",["215","216","217","218"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\data\\store.js",["219","220"],"import {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\n\r\nimport global from './Global';\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, global);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n",["221","222"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\CourseForm.jsx",["223","224","225","226","227","228"],"import React, {useEffect, useState, useRef} from 'react';\r\nimport {Container, Form, Button, Alert} from 'react-bootstrap';\r\nimport {\r\n  addParticipantToCourse,\r\n  getAllUsers,\r\n  getAllUsersInCourse,\r\n  addCourse,\r\n} from '../API/API';\r\nimport ColorfulSelect from './ColorfulSelect';\r\nimport TemporaryAlert from './TemporaryAlert';\r\n\r\nexport default function CourseForm({cid = -1}) {\r\n  const [options, setOptions] = useState([]);\r\n  const [initialOptions, setInitialOptions] = useState([]);\r\n  useEffect(() => {\r\n    getAllUsersInCourse(cid).then((r1) => {\r\n      // get all\r\n      getAllUsers().then((r2) => {\r\n        let inCourse = [];\r\n        r1.data.forEach((p) => {\r\n          const elm = {\r\n            value: `${p.id}`,\r\n            color: p.type == 'student' ? '#0e7bf1' : 'red',\r\n            label: `${p.fname} ${p.lname} (${p.id})`,\r\n          };\r\n          inCourse.push(elm);\r\n        });\r\n\r\n        let allP = [];\r\n        r2.data.forEach((p) => {\r\n          const elm = {\r\n            value: `${p.id}`,\r\n            color: p.type == 'student' ? '#0e7bf1' : 'red',\r\n            label: `${p.fname} ${p.lname} (${p.id})`,\r\n          };\r\n          allP.push(elm);\r\n        });\r\n\r\n        // notInCourse = allP \\ inCourse\r\n        // Let inCourse be 'b'\r\n        let b = new Set(inCourse.map((x) => x.value));\r\n        let notInCourse = [...allP].filter((x) => !b.has(x.value));\r\n\r\n        setInitialOptions(inCourse);\r\n        setOptions(notInCourse);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onChangeDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n  const onChangeParticipants = (values) => {\r\n    setParticipants(values);\r\n  };\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (title !== '' && description !== '' && participants !== []) {\r\n      // insert course\r\n      addCourse(title, description).then((res) => {\r\n        // insert courseParticipant\r\n        const newCourseId = res.data;\r\n        participants.forEach((p) => {\r\n          const id = p.value;\r\n          addParticipantToCourse(newCourseId, id);\r\n        });\r\n        setAlertType('success');\r\n        alertRef.current.showAlert();\r\n        setTitle('');\r\n        setDescription('');\r\n      });\r\n    } else {\r\n      setAlertType('warning');\r\n      alertRef.current.showAlert();\r\n    }\r\n  };\r\n  const alertRef = useRef();\r\n  const [alertType, setAlertType] = useState('warning');\r\n  const alertWarnHeading = 'Fields missing!';\r\n  const alertWarnBody = 'Please fill all of the missing fields!';\r\n  const alertSuccessHeading = 'Success!';\r\n  const alertSuccessBody = 'course has been created!';\r\n  return (\r\n    <Container>\r\n      <TemporaryAlert\r\n        body={alertType == 'success' ? alertSuccessBody : alertWarnBody}\r\n        heading={\r\n          alertType == 'success' ? alertSuccessHeading : alertWarnHeading\r\n        }\r\n        type={alertType}\r\n        ref={alertRef}\r\n      />\r\n\r\n      <h1>Add Course</h1>\r\n      <Form onSubmit={handleOnSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            placeholder=\"Enter title\"\r\n            onChange={onChangeTitle}\r\n            value={title}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            placeholder=\"Enter description\"\r\n            onChange={onChangeDescription}\r\n            value={description}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Participants (<span className=\"text-primary\">Students</span> |{' '}\r\n            <span className=\"text-danger\">Teachers</span>)\r\n          </Form.Label>\r\n          <ColorfulSelect\r\n            options={options}\r\n            initialOptions={initialOptions}\r\n            onChange={onChangeParticipants}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button className=\"float-right\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\ColorfulSelect.jsx",["229"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\TemporaryAlert.jsx",["230"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\EditableParagraph.jsx",["231"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\HomeworkForm.jsx",["232","233"],"C:\\Users\\Bshara\\Documents\\GitHub\\labs-grading-system\\src\\components\\DateTimePicker.jsx",["234"],{"ruleId":"235","severity":1,"message":"236","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":18},{"ruleId":"235","severity":1,"message":"239","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":17},{"ruleId":"235","severity":1,"message":"240","line":12,"column":8,"nodeType":"237","messageId":"238","endLine":12,"endColumn":23},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"235","severity":1,"message":"245","line":3,"column":9,"nodeType":"237","messageId":"238","endLine":3,"endColumn":13},{"ruleId":"235","severity":1,"message":"246","line":3,"column":15,"nodeType":"237","messageId":"238","endLine":3,"endColumn":25},{"ruleId":"235","severity":1,"message":"247","line":18,"column":7,"nodeType":"237","messageId":"238","endLine":18,"endColumn":12},{"ruleId":"248","severity":1,"message":"249","line":55,"column":6,"nodeType":"250","endLine":55,"endColumn":12,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":70,"column":26,"nodeType":"254","messageId":"255","endLine":70,"endColumn":28},{"ruleId":"241","replacedBy":"256"},{"ruleId":"243","replacedBy":"257"},{"ruleId":"241","replacedBy":"258"},{"ruleId":"243","replacedBy":"259"},{"ruleId":"235","severity":1,"message":"260","line":4,"column":9,"nodeType":"237","messageId":"238","endLine":4,"endColumn":21},{"ruleId":"235","severity":1,"message":"261","line":20,"column":10,"nodeType":"237","messageId":"238","endLine":20,"endColumn":20},{"ruleId":"235","severity":1,"message":"262","line":21,"column":10,"nodeType":"237","messageId":"238","endLine":21,"endColumn":21},{"ruleId":"235","severity":1,"message":"263","line":21,"column":23,"nodeType":"237","messageId":"238","endLine":21,"endColumn":37},{"ruleId":"235","severity":1,"message":"264","line":22,"column":10,"nodeType":"237","messageId":"238","endLine":22,"endColumn":19},{"ruleId":"235","severity":1,"message":"265","line":25,"column":9,"nodeType":"237","messageId":"238","endLine":25,"endColumn":19},{"ruleId":"235","severity":1,"message":"266","line":38,"column":9,"nodeType":"237","messageId":"238","endLine":38,"endColumn":25},{"ruleId":"235","severity":1,"message":"267","line":7,"column":9,"nodeType":"237","messageId":"238","endLine":7,"endColumn":17},{"ruleId":"241","replacedBy":"268"},{"ruleId":"243","replacedBy":"269"},{"ruleId":"235","severity":1,"message":"270","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":33},{"ruleId":"235","severity":1,"message":"271","line":30,"column":9,"nodeType":"237","messageId":"238","endLine":30,"endColumn":15},{"ruleId":"235","severity":1,"message":"272","line":30,"column":17,"nodeType":"237","messageId":"238","endLine":30,"endColumn":24},{"ruleId":"235","severity":1,"message":"273","line":31,"column":17,"nodeType":"237","messageId":"238","endLine":31,"endColumn":28},{"ruleId":"248","severity":1,"message":"274","line":66,"column":6,"nodeType":"250","endLine":66,"endColumn":8,"suggestions":"275"},{"ruleId":"248","severity":1,"message":"249","line":74,"column":6,"nodeType":"250","endLine":74,"endColumn":8,"suggestions":"276"},{"ruleId":"252","severity":1,"message":"253","line":135,"column":26,"nodeType":"254","messageId":"255","endLine":135,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":144,"column":26,"nodeType":"254","messageId":"255","endLine":144,"endColumn":28},{"ruleId":"252","severity":1,"message":"253","line":158,"column":34,"nodeType":"254","messageId":"255","endLine":158,"endColumn":36},{"ruleId":"252","severity":1,"message":"253","line":165,"column":20,"nodeType":"254","messageId":"255","endLine":165,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":177,"column":20,"nodeType":"254","messageId":"255","endLine":177,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":177,"column":66,"nodeType":"254","messageId":"255","endLine":177,"endColumn":68},{"ruleId":"252","severity":1,"message":"253","line":180,"column":20,"nodeType":"254","messageId":"255","endLine":180,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":194,"column":20,"nodeType":"254","messageId":"255","endLine":194,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":194,"column":66,"nodeType":"254","messageId":"255","endLine":194,"endColumn":68},{"ruleId":"252","severity":1,"message":"253","line":197,"column":20,"nodeType":"254","messageId":"255","endLine":197,"endColumn":22},{"ruleId":"248","severity":1,"message":"249","line":26,"column":6,"nodeType":"250","endLine":26,"endColumn":8,"suggestions":"277"},{"ruleId":"252","severity":1,"message":"278","line":38,"column":27,"nodeType":"254","messageId":"255","endLine":38,"endColumn":29},{"ruleId":"235","severity":1,"message":"279","line":19,"column":22,"nodeType":"237","messageId":"238","endLine":19,"endColumn":33},{"ruleId":"235","severity":1,"message":"280","line":31,"column":9,"nodeType":"237","messageId":"238","endLine":31,"endColumn":14},{"ruleId":"248","severity":1,"message":"281","line":21,"column":6,"nodeType":"250","endLine":21,"endColumn":22,"suggestions":"282"},{"ruleId":"252","severity":1,"message":"278","line":44,"column":45,"nodeType":"254","messageId":"255","endLine":44,"endColumn":47},{"ruleId":"283","severity":1,"message":"284","line":84,"column":19,"nodeType":"285","endLine":89,"endColumn":20},{"ruleId":"283","severity":1,"message":"284","line":94,"column":19,"nodeType":"285","endLine":97,"endColumn":20},{"ruleId":"241","replacedBy":"286"},{"ruleId":"243","replacedBy":"287"},{"ruleId":"248","severity":1,"message":"288","line":32,"column":6,"nodeType":"250","endLine":32,"endColumn":8,"suggestions":"289"},{"ruleId":"248","severity":1,"message":"249","line":38,"column":6,"nodeType":"250","endLine":38,"endColumn":8,"suggestions":"290"},{"ruleId":"252","severity":1,"message":"253","line":65,"column":32,"nodeType":"254","messageId":"255","endLine":65,"endColumn":34},{"ruleId":"241","replacedBy":"291"},{"ruleId":"243","replacedBy":"292"},{"ruleId":"235","severity":1,"message":"293","line":7,"column":3,"nodeType":"237","messageId":"238","endLine":7,"endColumn":28},{"ruleId":"235","severity":1,"message":"294","line":8,"column":3,"nodeType":"237","messageId":"238","endLine":8,"endColumn":25},{"ruleId":"235","severity":1,"message":"295","line":10,"column":9,"nodeType":"237","messageId":"238","endLine":10,"endColumn":20},{"ruleId":"235","severity":1,"message":"262","line":26,"column":10,"nodeType":"237","messageId":"238","endLine":26,"endColumn":21},{"ruleId":"235","severity":1,"message":"263","line":26,"column":23,"nodeType":"237","messageId":"238","endLine":26,"endColumn":37},{"ruleId":"235","severity":1,"message":"267","line":30,"column":9,"nodeType":"237","messageId":"238","endLine":30,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":59,"column":16,"nodeType":"254","messageId":"255","endLine":59,"endColumn":18},{"ruleId":"235","severity":1,"message":"296","line":14,"column":9,"nodeType":"237","messageId":"238","endLine":14,"endColumn":19},{"ruleId":"235","severity":1,"message":"297","line":15,"column":21,"nodeType":"237","messageId":"238","endLine":15,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":64,"column":6,"nodeType":"250","endLine":64,"endColumn":8,"suggestions":"298"},{"ruleId":"241","replacedBy":"299"},{"ruleId":"243","replacedBy":"300"},{"ruleId":"235","severity":1,"message":"295","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":21},{"ruleId":"235","severity":1,"message":"279","line":4,"column":23,"nodeType":"237","messageId":"238","endLine":4,"endColumn":34},{"ruleId":"235","severity":1,"message":"262","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":21},{"ruleId":"235","severity":1,"message":"263","line":9,"column":23,"nodeType":"237","messageId":"238","endLine":9,"endColumn":37},{"ruleId":"252","severity":1,"message":"253","line":31,"column":15,"nodeType":"254","messageId":"255","endLine":31,"endColumn":17},{"ruleId":"235","severity":1,"message":"260","line":3,"column":27,"nodeType":"237","messageId":"238","endLine":3,"endColumn":39},{"ruleId":"235","severity":1,"message":"279","line":3,"column":22,"nodeType":"237","messageId":"238","endLine":3,"endColumn":33},{"ruleId":"248","severity":1,"message":"301","line":17,"column":6,"nodeType":"250","endLine":17,"endColumn":8,"suggestions":"302"},{"ruleId":"252","severity":1,"message":"278","line":84,"column":17,"nodeType":"254","messageId":"255","endLine":84,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":128,"column":22,"nodeType":"254","messageId":"255","endLine":128,"endColumn":24},{"ruleId":"235","severity":1,"message":"295","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":21},{"ruleId":"235","severity":1,"message":"279","line":4,"column":23,"nodeType":"237","messageId":"238","endLine":4,"endColumn":34},{"ruleId":"235","severity":1,"message":"262","line":9,"column":10,"nodeType":"237","messageId":"238","endLine":9,"endColumn":21},{"ruleId":"235","severity":1,"message":"263","line":9,"column":23,"nodeType":"237","messageId":"238","endLine":9,"endColumn":37},{"ruleId":"235","severity":1,"message":"303","line":3,"column":3,"nodeType":"237","messageId":"238","endLine":3,"endColumn":15},{"ruleId":"235","severity":1,"message":"304","line":13,"column":9,"nodeType":"237","messageId":"238","endLine":13,"endColumn":20},{"ruleId":"241","replacedBy":"305"},{"ruleId":"243","replacedBy":"306"},{"ruleId":"235","severity":1,"message":"307","line":2,"column":34,"nodeType":"237","messageId":"238","endLine":2,"endColumn":39},{"ruleId":"252","severity":1,"message":"253","line":23,"column":27,"nodeType":"254","messageId":"255","endLine":23,"endColumn":29},{"ruleId":"252","severity":1,"message":"253","line":33,"column":27,"nodeType":"254","messageId":"255","endLine":33,"endColumn":29},{"ruleId":"248","severity":1,"message":"308","line":48,"column":6,"nodeType":"250","endLine":48,"endColumn":8,"suggestions":"309"},{"ruleId":"252","severity":1,"message":"253","line":93,"column":25,"nodeType":"254","messageId":"255","endLine":93,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":95,"column":21,"nodeType":"254","messageId":"255","endLine":95,"endColumn":23},{"ruleId":"235","severity":1,"message":"310","line":7,"column":7,"nodeType":"237","messageId":"238","endLine":7,"endColumn":10},{"ruleId":"235","severity":1,"message":"311","line":2,"column":3,"nodeType":"237","messageId":"238","endLine":2,"endColumn":12},{"ruleId":"235","severity":1,"message":"270","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":33},{"ruleId":"252","severity":1,"message":"253","line":66,"column":25,"nodeType":"254","messageId":"255","endLine":66,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":68,"column":21,"nodeType":"254","messageId":"255","endLine":68,"endColumn":23},{"ruleId":"235","severity":1,"message":"312","line":1,"column":16,"nodeType":"237","messageId":"238","endLine":1,"endColumn":24},"no-unused-vars","'UploadFile' is defined but never used.","Identifier","unusedVar","'FilesList' is defined but never used.","'UploadDisplayer' is defined but never used.","no-native-reassign",["313"],"no-negated-in-lhs",["314"],"'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'axios' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["315"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["313"],["314"],["313"],["314"],"'toDateString' is defined but never used.","'isHovering' is assigned a value but never used.","'isSubmitted' is assigned a value but never used.","'setIsSubmitted' is assigned a value but never used.","'fileNames' is assigned a value but never used.","'handleDrop' is assigned a value but never used.","'onContainerClick' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["313"],["314"],"'useRef' is defined but never used.","'MdEdit' is defined but never used.","'MdCheck' is defined but never used.","'FormControl' is defined but never used.","React Hook useEffect has missing dependencies: 'course' and 'user.id'. Either include them or remove the dependency array.",["316"],["317"],["318"],"Expected '!==' and instead saw '!='.","'useDispatch' is defined but never used.","'Login' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFilesList'. Either include it or remove the dependency array.",["319"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["313"],["314"],"React Hook useEffect has a missing dependency: 'Homework.id'. Either include it or remove the dependency array.",["320"],["321"],["313"],["314"],"'setCurrentHomeworkStudent' is defined but never used.","'currentHomeworkStudent' is defined but never used.","'useSelector' is defined but never used.","'student_hw' is assigned a value but never used.","'setSubmittedHomeWork' is assigned a value but never used.",["322"],["313"],["314"],"React Hook useEffect has a missing dependency: 'submission'. Either include it or remove the dependency array.",["323"],"'persistStore' is defined but never used.","'PersistGate' is defined but never used.",["313"],["314"],"'Alert' is defined but never used.","React Hook useEffect has a missing dependency: 'cid'. Either include it or remove the dependency array.",["324"],"'dot' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"329","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"329","fix":"336"},{"desc":"329","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [dispatch, user]",{"range":"342","text":"343"},"Update the dependencies array to be: [course, user.id]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch]",{"range":"346","text":"347"},{"range":"348","text":"347"},"Update the dependencies array to be: [fileUploadedAt, getFilesList]",{"range":"349","text":"350"},"Update the dependencies array to be: [Homework.id]",{"range":"351","text":"352"},{"range":"353","text":"347"},{"range":"354","text":"347"},"Update the dependencies array to be: [submission]",{"range":"355","text":"356"},"Update the dependencies array to be: [cid]",{"range":"357","text":"358"},[1576,1582],"[dispatch, user]",[2271,2273],"[course, user.id]",[2515,2517],"[dispatch]",[857,859],[702,718],"[fileUploadedAt, getFilesList]",[1093,1095],"[Homework.id]",[1256,1258],[2265,2267],[644,646],"[submission]",[1491,1493],"[cid]"]